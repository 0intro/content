#!/usr/bin/env bash
# check-import = stdout
{{% if SYSCTLVAL == "" %}}
# check-export = sysctl_{{{ SYSCTLID }}}_value=sysctl_{{{ SYSCTLID }}}_value
{{% endif %}}

{{% if product not in [ "ol7", "ol8", "ol9", "rhcos4", "rhel8", "rhel9", "rhel10", "ubuntu2004", "ubuntu2204"] %}}
FILES_NOT_MANAGED_BY_PACKAGES=("/etc/sysctl.conf" "/etc/sysctl.d/*.conf" "/lib/sysctl.d/*.conf" "/usr/local/lib/sysctl.d/*.conf" "/run/sysctl.d/*.conf")
{{% else %}}
FILES_NOT_MANAGED_BY_PACKAGES=("/etc/sysctl.conf" "/etc/sysctl.d/*.conf" "/usr/local/lib/sysctl.d/*.conf" "/run/sysctl.d/*.conf")
{{% endif %}}
FILES_MANAGED_BY_PACKAGES=("/usr/lib/sysctl.d/*.conf")

function check_sysctl_configuration()
{
    local sysctlvar="$1"
    local expected_value="$2"

    regex="^\s*$sysctlvar\s*=\s*(.*)\s*"

    # kernel static parameter $sysctlvar set to $sysctlvar in sysctl files not managed by packages
    found=0
    for files in ${FILES_NOT_MANAGED_BY_PACKAGES[@]} ; do
        [[ -e "$files" ]] || continue
        found_value=$(grep -P "$regex" $files | sed -E "s/$regex/\1/")
        if [[ -n "$found_value" ]] ; then
            if [[ "$found_value" == "$expected_value" ]] ; then
                found=1
            else
                return $XCCDF_RESULT_FAIL
            fi
        fi
    done
    if [[ $found != 0 ]] ; then
        return $XCCDF_RESULT_PASS
    fi

    # kernel static parameter $sysctlvar missing in sysctl files not managed by packages
    for files in ${FILES_NOT_MANAGED_BY_PACKAGES[@]} ; do
        [[ -e "$files" ]] || continue
        if grep -P "$regex"  $files ; then
            return $XCCDF_RESULT_FAIL
        fi
    done

    # kernel static parameter $sysctlvar set to $sysctlval in sysctl files managed by packages
    found=0
    for files in ${FILES_MANAGED_BY_PACKAGES[@]} ; do
        [[ -e "$files" ]] || continue
        if [[ -n "$found_value" ]] ; then
            if [[ "$found_value" == "$expected_value" ]] ; then
                found=1
            else
                return $XCCDF_RESULT_FAIL
            fi
        fi
    done
    if [[ $found != 0 ]] ; then
        return $XCCDF_RESULT_PASS
    fi

    return $XCCDF_RESULT_FAIL
}

{{% if IPV6 == "true" -%}}
# pass if IPv6 is disabled
check_sysctl_configuration "net.ipv6.conf.all.disable_ipv6" "1"
if [[ $? == $XCCDF_RESULT_PASS ]] ; then
    exit $XCCDF_RESULT_PASS
fi
{{% endif %}}

{{% if SYSCTLVAL == "" -%}}
expected_value="$XCCDF_VALUE_sysctl_{{{ SYSCTLID }}}_value"
{{%- else -%}}
expected_value="{{{ SYSCTLVAL }}}"
{{%- endif %}}
check_sysctl_configuration "{{{ SYSCTLVAR }}}" "$expected_value"
exit $?
